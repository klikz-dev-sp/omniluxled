<script type="text/javascript">
    function showDualPriceOverride(arguments) {
        jQuery = arguments[0];
        productID = arguments[1];
        productTags = arguments[2];
        productVendor = arguments[3];
        price = arguments[4];
        compareAtPrice = arguments[5];
        pathToPrice = arguments[6];
        type = arguments[7];
        dpMoneyFormat = "{{ shop.money_format }}";
        productVariantIsTaxable = arguments[9];
    
        dpShowTax = true;
        taxRulesValues = callFunctionDP('applyTaxRules', [jQuery, productID, productTags, productVendor, dp_tax_percent, dp_price_type_to_show], true);
        dpTaxPercent = taxRulesValues.dpTaxPercent;
        dpShowTax = taxRulesValues.dpShowTax;
        dpPriceTypeToShow = taxRulesValues.dpPriceTypeToShow;
    
        if ((parseInt(dp_dual_price_for_taxable_products) == 1 && !productVariantIsTaxable) || !dpShowTax) {
            jQuery(pathToPrice).addClass('nonTaxableVariant');
            if (type == 'dp_detail' && (jQuery('.dp_detail .firstPrice').length > 0 || jQuery('.dp_detail .secondPrice').length > 0)) {
                jQuery('.dp_detail').hide();
            }
            return true;
        }
        taxPercent = parseFloat(dpTaxPercent);
        if (parseInt(dp_base_price_type) == 0) {
            firstPrice = Shopify.formatMoney(price, dpMoneyFormat);
            secondPrice = firstPrice;
            if (!isNaN(taxPercent) && taxPercent > 0) {
                secondPriceNotFormated =  (price / (1 + taxPercent / 100));
                secondPrice = Shopify.formatMoney(secondPriceNotFormated, dpMoneyFormat);
            }
        } else {
            secondPrice = Shopify.formatMoney(price, dpMoneyFormat);
            firstPrice = secondPrice;
            if (!isNaN(taxPercent) && taxPercent > 0) {
                firstPriceNotFormated = (price * (1 + taxPercent / 100));
                firstPrice = Shopify.formatMoney(firstPriceNotFormated, dpMoneyFormat);
            }
        }
        compareAtPriceBlock = '';
        firstPriceBlock = '';
        secondPriceBlock = '';
        if (parseInt(dp_show_compare_at_price) == 1 && parseInt(compareAtPrice) > 0 && parseInt(compareAtPrice) != parseInt(price)) {
            compareAtPriceBlock = '<span class="dpCompareAtPrice" style="text-decoration: line-through;"><span>' + Shopify.formatMoney(compareAtPrice, dpMoneyFormat) + '</span></span>' + '<br/>';
        }
        if (parseInt(dpPriceTypeToShow) != 2) {
            firstPriceBlock = '<span class="firstPrice" style="color:' + dp_tax_incl_color + '"><span class="firstPriceValue">' + firstPrice + '</span> <span class="firstPriceLabel">' + (dp_tax_incl_label != null ? dp_tax_incl_label : '') + '</span></span>';
        }
        if (parseInt(dpPriceTypeToShow) != 1) {
            secondPriceBlock = '<span class="secondPrice" style="color:' + dp_tax_excl_color + '"><span class="secondPriceValue">' + secondPrice + '</span> <span class="secondPriceLabel">' + (dp_tax_excl_label != null ? dp_tax_excl_label : '') + '</span></span>';
        }
        dualPriceBlock = (compareAtPriceBlock + firstPriceBlock + '<br/>' + secondPriceBlock);
        if (parseInt(dp_first_price) == 1) {
            dualPriceBlock = (compareAtPriceBlock + secondPriceBlock + '<br/>' + firstPriceBlock);
        }
    
        sizeRatio = 1;
        if (parseInt(dp_size_ratio) == 1) {
            sizeRatio = 1.5;
        } else if (parseInt(dp_size_ratio) == 2) {
            sizeRatio = 1.666;
        } else if (parseInt(dp_size_ratio) == 3) {
            sizeRatio = 1.75;
        }
    
        priceIsFound = false;
        pathToPrice.each(function() {
            jQuery(this).show();
            if (!jQuery(this).is(":hidden") && jQuery(this).is(":visible") && !priceIsFound)  {
                priceIsFound = true;
                callFunctionDP('appendDualPrice', [jQuery, this, type, dualPriceBlock, sizeRatio, dpPriceTypeToShow], false);
            }
        });
    
        if (type != 'dp_detail') {
            isfirst = true;
            pathToPrice.each(function () {
                if (isfirst && !priceIsFound) {
                    callFunctionDP('appendDualPrice', [jQuery, this, type, dualPriceBlock, sizeRatio, dpPriceTypeToShow], false);
                } else {
                    if (jQuery(this).html() == firstPrice || jQuery(this).html() == secondPrice) {
                        jQuery(this).remove();
                    }
                    jQuery(this).show();
                }
                isfirst = false;
            });
        }
    }
</script>