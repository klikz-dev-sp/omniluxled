<div class="circle-video-menu-wrap circle-video-menu-wrap--{{ section.id }} circle-video-desktop {{ section.settings.div_id }}">
  <div class="circle-video-menu circle-video-menu--{{ section.id }} {% if section.settings.ignore %}circle-vide-menu--ignore{% endif %}">
    <div class="circle-menu-items">
      {% for block in section.blocks %}
        <a class="circle-video-menu-item">
          <span class="circle-video-menu-item-image">
            <img loading="lazy" class="circle-menu-item-img" src="{{ block.settings.image | img_url: 'master' }}">
            {% render 'icon-play' %}
          </span>
          <span class="circle-menu-item-label">{{ block.settings.label }}</span>
          <span class="circle-menu-item-excerpt">{{ block.settings.excerpt }}</span>
        </a>
      {% endfor %}
    </div>
  </div>

  {% for block in section.blocks %}
    <div class="circle-video-menu-modal">
      <div class="width">
        <div class="circle-video-menu-modal-inner">
          <button class="circle-video-menu-modal-close">{% render 'icon-close' %}</button>
          <video playsinline preload="none" controls>
            {% for source in block.settings.video.sources %}
              <source src="{{ source.url }}" type="{{ source.mime_type }}">
            {% endfor %}
          </video>
        </div>
      </div>
    </div>
  {% endfor %}
</div>

<style>
.circle-video-menu-wrap.circle-video-desktop{display:none;margin:0 15px;}
.circle-video-desktop .circle-menu-items{overflow-x: auto;white-space: nowrap;padding: 16px 0 12px;}
.circle-video-desktop .circle-video-menu-item {text-align: center;width: 100px;display: inline-block;color:#000;}

.circle-video-desktop .circle-video-menu-item-image {display: block;width: auto;height: 90px;margin: 0 auto;border-radius: 10px;overflow: hidden;color: #fff;position: relative;}
.circle-video-desktop .circle-video-menu-item-image::after {
content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(180deg, rgba(0, 0, 0, 0) 48.96%, #000000 100%);
}

.circle-video-desktop .circle-video-menu-item-image img{top:-10px;position:relative;}
.circle-video-desktop .circle-menu-item-label {position:relative;top:-15px;font-weight: 600;font-family: Inter, var(--body_bold_font);font-size: 13px;display: block;line-height: 1;color:#fff;}

.circle-video-desktop .circle-video-menu-modal {background-color: #000c;position: fixed;top: 0;width: 100%;height: 100%;z-index: 2147483647;display: flex;left: -9999px;transition: var(--fadeOff);opacity: 0;}
.circle-video-desktop .circle-video-menu-modal .width {margin: auto;}

.circle-video-desktop .width {max-width: var(--page_width);margin: 0 auto;width: calc(100% - 36px);}

.circle-video-desktop .circle-video-menu-modal-inner {max-width: 500px;margin: 0 auto;display: flex;align-items: flex-end;flex-direction: column;}

.circle-video-desktop .circle-video-menu-modal-close {margin: 0 10px 0 auto;transform: translate(4px);color: #fff;width: 24px;background: transparent;border: 0;}

.circle-video-desktop .circle-video-menu-modal video {display: block;margin: 0 auto;width: 100%;}
.circle-video-desktop .circle-video-menu-item-image svg {display: block;max-width: 100%;position: absolute;top: 50%;left: 50%;transform: translate(-50%,-50%);}

.circle-video-desktop .circle-video-menu-modal.circle-video-menu-modal--active{transition: left 0s, top 0s, opacity 0.2s;left: 0;opacity: 1;}
@media(max-width:600px){
  .circle-video-menu-wrap.circle-video-desktop{display:block;}
  .circle-video-desktop .circle-video-menu-modal-inner {max-width: 300px;}
}
  </style>


<script>
  document.querySelectorAll('.circle-video-menu--{{ section.id }} .circle-video-menu-item').forEach((item, i) => {
    item.addEventListener('click', () => {
      const root = item.closest('.circle-video-menu-wrap');
      const modal = root.querySelectorAll(`.circle-video-menu-modal`)[i];
      const video = modal.querySelector('video');

      modal.classList.add('circle-video-menu-modal--active');
      video.play();
    });
  });

  document.querySelectorAll('.circle-video-menu-wrap--{{ section.id }} .circle-video-menu-modal').forEach((el) => {
    el.addEventListener('click', () => {
      const video = el.querySelector('video');
      video.pause();
      el.classList.remove('circle-video-menu-modal--active');
    });
  });
</script>

{% schema %}
{
  "name": "Circle video menu DESKTOP",
  "class": "circle-video-menu-wrap-wrap",
  "settings": [
    {
      "label": "Border color",
      "id": "border_color",
      "type": "color",
      "default": "#000000"
    },
    {
          "label": "Section Product ID",
          "id": "div_id",
          "type": "text"
        },
    {
      "label": "Ignore theme fonts",
      "id": "ignore",
      "type": "checkbox",
      "default": true
    }
  ],
  "blocks": [
    {
      "name": "Circle link",
      "type": "circle-link",
      "settings": [
        {
          "label": "Image",
          "id": "image",
          "type": "image_picker"
        },
        {
          "label": "Label",
          "id": "label",
          "type": "text"
        },
        {
          "label": "Excerpt",
          "id": "excerpt",
          "type": "text"
        },
        {
          "label": "Video url",
          "id": "video",
          "type": "video"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Circle video menu DESKTOP"
    }
  ]
}
{% endschema %}